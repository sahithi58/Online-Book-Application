package com.sapestore.controller.test;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

import com.sapestore.controller.ReportsController;

/**
 * The class <code>AdminReportControllerTest</code> contains tests for the
 * class {@link <code>AdminReportController</code>}
 *
 * @pattern JUnit Test Case
 *
 * @generatedBy CodePro at 7/12/14 11:20 AM
 *
 * @author kmedir
 *
 * @version $Revision$
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:test-application-context.xml" })
@WebAppConfiguration
public class ReportsControllerTest {
	
    private MockMvc mockMvc;

    @Autowired
    private WebApplicationContext wac;

	/**
	 * The object that is being tested.
	 *
	 * @see com.sapestore.controller.AdminReportController
	 */
	private ReportsController fixture = new ReportsController();

	/**
	 * Construct new test instance
	 *
	 * @param name the test name
	 */
	public ReportsControllerTest() {
	}

	/**
	 * Launch the test.
	 *
	 * @param args String[]
	 */
	public static void main(String[] args) {
		// add code to run tests here
	}

	/**
	 * Return the object that is being tested.
	 *
	 * @return the test fixture
	 *
	 * @see com.sapestore.controller.AdminReportController
	 */
	public ReportsController getFixture() {
		return fixture;
	}

	/**
	 * Set the object that is being tested.
	 *
	 * @param fixture the test fixture
	 */
	public void setFixture(ReportsController fixture) {
		this.fixture = fixture;
	}

	/**
	 * Run the String adminReport(ModelMap) method test
	 */
	@Test
	public void testAdminReport() {
		try {
			mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();
			mockMvc.perform(get("/adminReport"))
			.andExpect(status().isOk());
		} catch (Exception e) {
			e.printStackTrace();
		}		
	}
	
	/**
	 * Run the String defaultersReport(ModelMap) method test
	 */
	@Test
	public void testDefaultersReport() {
		try {
			mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();
			mockMvc.perform(get("/defaultersReport"))
			.andExpect(status().isOk());
		} catch (Exception e) {
			e.printStackTrace();
		}		
	}

}

/*$CPS$ This comment was generated by CodePro. Do not edit it.
 * patternId = com.instantiations.assist.eclipse.pattern.testCasePattern
 * strategyId = com.instantiations.assist.eclipse.pattern.testCasePattern.junitTestCase
 * additionalTestNames = 
 * assertTrue = false
 * callTestMethod = true
 * createMain = true
 * createSetUp = false
 * createTearDown = false
 * createTestFixture = true
 * createTestStubs = false
 * methods = adminReport(QModelMap;),getAdminReportList(),setAdminReportList(QList<QAdminReport;>;)
 * package = com.sapestore.controller
 * package.sourceFolder = SapeStore/src/main/java
 * superclassType = junit.framework.TestCase
 * testCase = AdminReportControllerTest
 * testClassType = com.sapestore.controller.AdminReportController
 */