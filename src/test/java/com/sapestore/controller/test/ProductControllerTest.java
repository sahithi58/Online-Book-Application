package com.sapestore.controller.test;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

import com.sapestore.controller.ProductController;
import com.sapestore.dao.ProductDao;
import com.sapestore.vo.BookVO;

/**
 * The class <code>AddBooksAdminControllerTest</code> contains tests for the
 * class {@link <code>AddBooksAdminController</code>}
 *
 * @pattern JUnit Test Case
 *
 * @generatedBy CodePro at 7/12/14 11:05 AM
 *
 * @author kmedir
 *
 * @version $Revision$
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:test-application-context.xml" })
@WebAppConfiguration
public class ProductControllerTest {
	
    private MockMvc mockMvc;

    @Autowired
    private WebApplicationContext wac;
	/*
	@Autowired
	private ProductDao productDao;*/

	/**
	 * The object that is being tested.
	 *
	 * @see com.sapestore.controller.AddBooksAdminController
	 */
	private ProductController fixture = new ProductController();

	/**
	 * Construct new test instance
	 *
	 * @param name the test name
	 */
	public ProductControllerTest() {
	}

	/**
	 * Launch the test.
	 *
	 * @param args String[]
	 */
	public static void main(String[] args) {
	}

	/**
	 * Return the object that is being tested.
	 *
	 * @return the test fixture
	 *
	 * @see com.sapestore.controller.AddBooksAdminController
	 */
	public ProductController getFixture() {
		return fixture;
	}

	/**
	 * Set the object that is being tested.
	 *
	 * @param fixture the test fixture
	 */
	public void setFixture(ProductController fixture) {
		this.fixture = fixture;
	}

	/**
	 * Run the String addBooksAdmin(ModelMap) method test
	 */
	@Test
	public void testAddBooksAdmin() {
		try {
			mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();
			mockMvc.perform(post("/addBooksAdmin"))
			.andExpect(status().isOk());
		} catch (Exception e) {
			e.printStackTrace();
		}		
	}
	
	/**
	 * Run the String deleteBook(String, ModelMap, RedirectAttributes) method
	 * test
	 */
	@Test
	public void testDeleteBook() {
		try {
			mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();
			mockMvc.perform(get("/deleteBook?isbn=9988776688"))
			.andExpect(status().is(302));
		} catch (Exception e) {
			e.printStackTrace();
		}		
	}
	@Test
	public void testaddBooks() {
		try {
			BookVO bookvo=new BookVO();
			
			bookvo.setBookTitle("TitleofBook");
			bookvo.setBookAuthor("Authorof Book");
			bookvo.setIsbn("12121212");
			bookvo.setPublisherName("PublisherName");
			bookvo.setCategoryId("13");
			bookvo.setBookPrice("500");
			bookvo.setRentPrice("5"); 
			bookvo.setBookShortDesc("Hithisis shortdeesc");
			bookvo.setBookDetailDesc("HI this is Detailsdesc");
			/*bookvo.setFullImage(org.springframework.web.multipart.commons.CommonsMultipartFile@9835409
);*/
			bookvo.setRentAvailable("Y");
			/*bookvo.setThumbImage(org.springframework.web.multipart.commons.CommonsMultipartFile@46f64c75
);*/
			
			mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();
			mockMvc.perform(post("/addBooks").requestAttr("addBooks", bookvo))
			.andExpect(status().isOk());
		} catch (Exception e) {
			e.printStackTrace();
		}		
	}
}

/*$CPS$ This comment was generated by CodePro. Do not edit it.
 * patternId = com.instantiations.assist.eclipse.pattern.testCasePattern
 * strategyId = com.instantiations.assist.eclipse.pattern.testCasePattern.junitTestCase
 * additionalTestNames = 
 * assertTrue = false
 * callTestMethod = true
 * createMain = true
 * createSetUp = false
 * createTearDown = false
 * createTestFixture = true
 * createTestStubs = false
 * methods = addBooksAdmin(QModelMap;)
 * package = com.sapestore.controller
 * package.sourceFolder = SapeStore/src/main/java
 * superclassType = junit.framework.TestCase
 * testCase = AddBooksAdminControllerTest
 * testClassType = com.sapestore.controller.AddBooksAdminController
 */